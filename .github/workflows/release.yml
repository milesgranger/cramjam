name: ReleaseCI

on:
  release:
    types:
      - published
      - prereleased
  push:
    tags:
      - "*"

jobs:
  build-n-publish:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        python-version: [ 3.6, 3.7, 3.8, 3.9, pypy-3.6 ]
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy
          override: true

      - name: Python Maturin Install
        run: |
          pip install --upgrade pip
          pip install maturin

      - name: Build Wheels - Linux - CPython
        if: ${{ startsWith(matrix.os, 'ubuntu') && !startsWith(matrix.python-version, 'pypy')  }}
        run: |
          docker run --rm -v $(pwd):/io konstin2/maturin build --release --out wheels
          ls -l wheels

      - name: Build Wheels - Windows and OSX - CPython
        if: ${{ !startsWith(matrix.os, 'ubuntu') && !startsWith(matrix.python-version, 'pypy') }}
        run: |
          pip install maturin
          maturin build --release --out wheels
          maturin sdist --out wheels
          ls -l wheels

      - name: Build Wheels - Linux and OSX - PyPy
        if: ${{ !startsWith(matrix.os, 'windows') && startsWith(matrix.python-version, 'pypy')  }}
        run: |
          make pypy-build
          ls -l wheels

      - name: Publish
        if: ${{ !(startsWith(matrix.os, 'windows') && startsWith(matrix.python-version, 'pypy')) }}
        env:
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
        run: |
          pip install twine
          twine upload -u milesg --skip-existing wheels/*
